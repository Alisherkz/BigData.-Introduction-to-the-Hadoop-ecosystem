 ! ПОЯСНЕНИЕ	

Делится на два типа 1. Выполнение задач 2.Кластер

	+Выполнение задач+

Application это приложение которое выполняется в Yarn

Container единица выделения ресурсов кластера

	+Кластер+

Node Manager регулярно отправляет информацию к Resurce Manager
о состояние той или иной ноды

Resurce Manager кординатор ресурсов кластера. Учитывает только CPU и память

Application master представитель приложения


- + - + - + - + - + - + Инструкция по картинке 1 - + - + - + - + - + 

1. Приходит запрос от клиентов к Resource Manager
2. До этого Node manager отправляет состояние кластера к Resource Manager
3. Запросов от клиента Resource Manager по полученным данным от Node Manager понимает кому отправить задачу
(определяют Какому кластеру отправить)
4. Допустим Resource Manager решил отправить 2-му кластеру (2-ая КАРТИНКА), и он разварачивает Application Master
2-го кластера, потом Application Master разварачивает Container-ов других кластеров кроме своего
(конкретно 1-го и 3-го кластера) Container-ы вычесляют(решает) задачу и обратно 
отправляет к Application Master и Application Master понимает что, как и где сохранился данная ему 
задача и этих данных отправляет Resource Manager точнее две значений TRUE or False.
Почему Application Master разварачивает Container-ов другого кластера? Так делаются потому что, Container
своего кластера не занимал ресурсов. Если Application Master разварачивал своего Container-a он бы
истратил свой же ресурс и решение задач занимал бы большое время. и еще этот метод дает преимущества когда
Другой же Container истратил бы весь ресурс и этот кластер пал, Application Master продолжал бы подключаясь к другому
Container-у.
5. Если Container решил использовать данных для решений задач, то он будет использовать тех данных которые у него есть.
Если использовать других данных сеть будет перегружен.


- + - + - + - + - + - + - + - + - + - + - + - Планировщики - + - + - + - + - + - + - + - + - + - + - + - + 

Есть 3 вида планировщика:
1. ФИФО первый пришел первый ушел
+/- это Нужно ждать задач пока не выполниться передний, но быстрее чем параллельное.

2. Параллельное, где задачи выполняется параллельно
+/- выполняется вместе, не нужно ждать, но выполняется долго

3. Равномерное выполнение


- + - + - + - + - + - + - + - + - + - + - Подключение к порту - + - + - + - + - + - + - + - + - + 

1. Надо подключиться через порт это >

> ssh -i [key.format] [login]@[ip_address] -D localhost:[port]

> ssh -i id_rsa_gb.txt student10_16@novalocal -D localhost:1080

2. Нужно настроить браузер: 
	1. Для это заходим настройки
	2. Настройки сети или Параметры сети
	3. Узел SOCKS > localhost, Пишем на порт > 1080
	4. Выберим SOCKS 5

3. Зайдем через ссылку (В моем случае.Поставил не manager.novalocal а просто novalocal)
novalocal:8088 (Да я помню что писал в настройках порт 1080, но зайдеш через 8088 и автоматом
перекидывает на http://novalocal:8088/cluster)

	!Помни ЕСЛИ ПИШИТЕ ОШИБОЧНО ТОГДА В ТЕРМИНАЛЕ БУДЕТ СООБЩЕНИЕ ОБ ОШИБКЕ
		: channel 15: open failed: connect failed: Connection refused
		НЕ ВОЛНУЙТЕСЬ ВСЕ НОРМ, МОЖЕТЕ ПЕРЕПИСАТЬ ССЫЛКУ ОН ЗАЙДЕТ! 

 - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - + - +  - +

 
 - + - + - + - + - + - + - + - + - + Работа с МапРедиюс + - + - + - + - + - + - + - + - + - + - + 

Map Reduce - это так называемые система обработки. Это не точный пояснение, но примерно так
В задачах 1 В Мапе сортирует слова 2 В Редиюсе считает. И за краткое время должен выполнить задачу
Смысл в том что Задачу Хадуп разделяет и выполняет.

Надо записать термин:?

